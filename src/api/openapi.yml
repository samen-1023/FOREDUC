openapi: '3.0.2'
info:
  title: OpenAPI Foreduc
  version: '1.0'

paths:
  /users:
    x-exegesis-controller: user.controller
    # x-exegesis-roles: ['any']
    post:
      summary: Регистрация пользователя (только для админов)
      operationId: createItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
    get:
      operationId: getList
      parameters:
        - in: query
          name: department
          required: false
          schema:
            $ref: '#/components/schemas/EDepartment'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'

  /groups:
    x-exegesis-controller: group.controller
    post:
      description: Создает новую группу
      operationId: createItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Group'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
    get:
      description: Отдает все группы
      operationId: getList
      parameters:
        - in: query
          name: take
          schema:
            type: integer
            minimum: 0
        - in: query
          name: skip
          schema:
            type: integer
            minimum: 0
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Group'

  /groups/{id}:
    x-exegesis-controller: group.controller
    get:
      description: Отдает группу
      operationId: getItem
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'
    put:
      description: Модифицирует группу
      operationId: updateItem
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Group'


components:
  responses:
     Unauthorized:
      description: Отстуствует авторизация / Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    User:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseSchema'
        - type: object
          properties:
            username:
              type: string
            password:
              type: string
            role:
              type: string
            accessToken:
              type: string
            department:
              $ref: '#/components/schemas/EDepartment'
            leadsGroup:
              type: array
              items:
                type: string
            personalData:
              $ref: '#/components/schemas/IPersonalData'
              
    Group:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseSchema'
        - type: object
          properties:
            name:
              type: string

    Specialization:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseSchema'
        - type: object
          properties:
            name:
              type: string

    Student:
      type: object
      allOf:
        - $ref: '#/components/schemas/BaseSchema'
        - type: object
          properties:
            specialization:
              $ref: '#/components/schemas/Specialization'
            group:
              $ref: '#/components/schemas/Group'
            personalData:
              $ref: '#/components/schemas/IPersonalData'
            creditCard:
              type: string
              nullable: true

    BaseSchema:
      type: object
      properties:
        _id:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

    IPersonalData:
      type: object
      properties:
        surname: 
          type: string
        name: 
          type: string
        patronymic: 
          type: string
        phone: 
          type: string
        SNILS: 
          type: string
        INN: 
          type: string
        email: 
          type: string
        residentialAddress: 
          type: object
          properties:
            real:
              type: string
            registration:
              type: string
        passport: 
          type: object
          properties:
            issuedAt:
              type: string
              format: date
            issuesPlace:
              type: string
            number:
              type: string
            series:
              type: string
            birthdate:
              type: string
              format: date

    EDepartment:
      type: string
      enum:
        - any
        - it

    ERoles:
      type: string
      enum:
        - all
        - admin
        - curator
        - educator
        - supervisor

    EDocType:
      type: string
      enum:
        - any
        - report
        - statement

    SkipParam:
      type: number
      nullable: true

    TakeParam:
      type: number
      nullable: true